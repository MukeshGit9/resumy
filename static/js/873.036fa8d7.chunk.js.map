{"version":3,"file":"static/js/873.036fa8d7.chunk.js","mappings":"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","sources":["pages/freshertemplate1.js","pages/strtolistmodule.js"],"sourcesContent":["import React from 'react';\r\nimport './freshertemplate1.css';\r\nimport jsPDF from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\nimport StrToListModule from './strtolistmodule';\r\n\r\n\r\nfunction Freshertemplate1({formData}){\r\n\tconst {interestList,\thardSkillsList,\tsoftSkillsList,\texpDescriptionList} = StrToListModule(formData);\r\n\r\n// Function to save as PDF----------------------------------------------------------------------\r\nconst handleSaveAsPDF = () => {\r\n  const input = document.getElementById('fresherTemplate1');\r\n\t\r\n\t// Adjust scale dynamically\r\n  const scale = window.devicePixelRatio > 2 ? 3 : 2; \r\n\r\n  html2canvas(input, { scale }).then((canvas) => {\r\n    const imgData = canvas.toDataURL('image/png');\r\n    const pdf = new jsPDF('p', 'mm', 'a4');\r\n    \r\n    const pdfWidth = pdf.internal.pageSize.getWidth();\r\n    const pdfHeight = pdf.internal.pageSize.getHeight();\r\n    const pageHeight = (canvas.width / pdfWidth) * pdfHeight;\r\n    const margin = 10; // Adjust this value to control the gap between pages\r\n\r\n    let position = 0;\r\n    let page = 0;\r\n\r\n    while (position < canvas.height) {\r\n      // Create a new canvas for each page\r\n      const pageCanvas = document.createElement('canvas');\r\n      pageCanvas.width = canvas.width;\r\n      pageCanvas.height = pageHeight;\r\n\r\n      const pageContext = pageCanvas.getContext('2d');\r\n      pageContext.fillStyle = '#FFFFFF'; // Set background to white to avoid transparency issues\r\n      pageContext.fillRect(0, 0, pageCanvas.width, pageCanvas.height);\r\n\r\n      // Draw the part of the original canvas on the new page canvas\r\n      pageContext.drawImage(\r\n        canvas,\r\n        0,\r\n        position,\r\n        canvas.width,\r\n        pageHeight,\r\n        0,\r\n        0,\r\n        canvas.width,\r\n        pageHeight\r\n      );\r\n\r\n      const pageImgData = pageCanvas.toDataURL('image/png');\r\n\r\n      // Add the image to the PDF with a margin\r\n      if (page > 0) pdf.addPage();\r\n      pdf.addImage(pageImgData, 'PNG', 0, margin, pdfWidth, pdfHeight - margin * scale);\r\n\r\n      position += pageHeight;\r\n      page++;\r\n    }\r\n\r\n    // Save the PDF file\r\n    pdf.save(`${formData.personalInfo.fullName || 'resume'}.pdf`);\r\n  });\r\n};\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t{/*Model---------------------------------------------------------------------------*/}\r\n\t\t\t\t\r\n\r\n\t\t\t\t<div className=\"modal fade\" id=\"fresherTemplateModel\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\r\n\t\t\t\t  <div className=\"modal-dialog modal-lg \" role=\"document\">\r\n\t\t\t\t    <div className=\"modal-content\">\r\n\t\t\t\t      <div className=\"modal-header  justify-content-between align-items-center model-hd-head\">\r\n\t\t\t\t        <h5 className=\"modal-title col-10\" id=\"exampleModalLongTitle\">FRESHER - TEMPLATE 1</h5>\r\n\t\t\t\t        <button type=\"button\" className=\" btn col-2\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n\t\t\t\t          <span aria-hidden=\"true\">&times;</span>\r\n\t\t\t\t        </button>\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"modal-body row\" id=\"fresherTemplate1\">\r\n\t\t\t\t        <div className=\"col-12 resume-cover\" >\r\n\r\n\t\t\t\t        \t<h1>RESUME</h1>\r\n\r\n\t\t\t\t        \t<h2>{formData.personalInfo.fullName}</h2>\r\n\t\t\t\t        \t<table>\r\n\t\t\t\t        \t\t<tr>\r\n\t\t\t\t        \t\t\t<td><span>Add :</span></td>\r\n\t\t\t\t        \t\t\t<td>{formData.contact.address} - {formData.contact.pinCode}</td>\r\n\t\t\t\t        \t\t</tr>\r\n\t\t\t\t        \t\t<tr>\r\n\t\t\t\t        \t\t\t<td><span>City :</span></td>\r\n\t\t\t\t        \t\t\t<td>{formData.contact.city}</td>\r\n\t\t\t\t        \t\t</tr>\r\n\t\t\t\t        \t\t<tr>\r\n\t\t\t\t        \t\t\t<td><span>State :</span></td>\r\n\t\t\t\t        \t\t\t<td>{formData.contact.state}</td>\r\n\t\t\t\t        \t\t</tr>\r\n\t\t\t\t        \t\t<tr>\r\n\t\t\t\t        \t\t\t<td><span>Country :</span></td>\r\n\t\t\t\t        \t\t\t<td>{formData.contact.country}</td>\r\n\t\t\t\t        \t\t</tr>\r\n\t\t\t\t        \t\t<tr>\r\n\t\t\t\t        \t\t\t<td><span>Phone No. :</span></td>\r\n\t\t\t\t        \t\t\t<td>{formData.contact.phoneNo}</td>\r\n\t\t\t\t        \t\t</tr>\r\n\t\t\t\t        \t\t<tr>\r\n\t\t\t\t        \t\t\t<td><span>Email :</span></td>\r\n\t\t\t\t        \t\t\t<td>{formData.contact.email}</td>\r\n\t\t\t\t        \t\t</tr>\r\n\t\t\t\t        \t</table>\r\n\r\n\t\t\t\t        \t<h3>PROFILE SUMMARY - </h3>\r\n\t\t\t\t        \t<p>{formData.profileSummary.profileSummary}</p>\r\n\r\n\t\t\t\t        \t<h3>EDUCATION - </h3>\r\n\t\t\t\t        \t<ul>\r\n\t\t\t\t        \t{formData.higherEducation.map((edu, index) => (\r\n\t\t\t\t\t\t\t\t\t  <li key={index}><span>{edu.degree}&nbsp;&nbsp; - &nbsp;&nbsp;{edu.passingYear}</span> <br/>\r\n\t\t\t\t\t\t        \t\t\tFrom - {edu.institution} <br/>\r\n\t\t\t\t\t\t        \t\t\tPercentage - {edu.GPA} %\r\n\t\t\t\t\t\t        \t</li>\r\n\t\t\t\t\t\t\t\t\t))}\t\t\t        \t\r\n\t\t\t\t        \t</ul>\r\n\r\n\t\t\t\t        \t<h3 >INTERNSHIP / APPRENTICE - </h3>\r\n\t\t\t\t        \t<ul>\r\n\t\t\t\t        \t<li><span>{formData.internship.internTitle}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{formData.internship.internDuration}</span> <br/>\r\n\t\t\t\t        \t\t\t{formData.internship.internCompany} <br/>\r\n\t\t\t\t        \t</li>\r\n\t\t\t\t        \t</ul>\r\n\r\n\t\t\t\t        \t<h3>WORK EXPERIENCE - </h3>\r\n\t\t\t\t        \t<ul>\r\n\t\t\t\t        \t{formData.experience.map((expp, index)=>(\r\n\t\t\t\t        \t<li key={index}><span>{expp.jobTitle}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{expp.duration}</span><br/>\r\n\t\t\t\t        \t\t\t{expp.company}\r\n\t\t\t\t        \t</li>\r\n\t\t\t\t        \t))}\t\t\t\t        \t\r\n\t\t\t\t        \t</ul>\r\n\r\n\t\t\t\t        \t<h3>SKILLS - </h3>\r\n\t\t\t\t        \t\r\n\t\t\t\t        \t<h6>Hard Skills</h6>\r\n\t\t\t\t        \t<ul>\r\n\t\t\t\t        \t{hardSkillsList.map((item, index)=>(\r\n\t\t\t\t        \t\t<li className=\"p-0\">\r\n\t\t\t\t\t        \t\t\t{item.trim()}\r\n\t\t\t\t\t        \t</li>\r\n\t\t\t\t        \t))}\t\t\t\t        \t\t\r\n\t\t\t\t\t        </ul>\r\n\t\t\t\t        \t<h6>Soft Skills</h6>\r\n\t\t\t\t        \t<ul>\r\n\t\t\t\t        \t{softSkillsList.map((item, index)=>(\r\n\t\t\t\t        \t\t<li className=\"p-0\">\r\n\t\t\t\t\t        \t\t\t{item.trim()}\r\n\t\t\t\t\t        \t</li>\r\n\t\t\t\t        \t))}\t\r\n\t\t\t\t        \t</ul>\r\n\r\n\t\t\t\t        \t<h3>PROJECT - </h3>\r\n\t\t\t\t        \t<ul>\r\n\t\t\t\t        \t{formData.project.map((prj, index)=>(\r\n\t\t\t\t        \t\t<li><span>Projet Title : </span>{prj.projectTitle} <br/>\r\n\t\t\t\t\t        \t\t\t<span>Client : </span>{prj.client} <br/>\r\n\t\t\t\t\t        \t\t\t<span>Skill Used : </span>{prj.skillUsed}\r\n\t\t\t\t\t        \t</li>\r\n\t\t\t\t        \t))}\t\t\t\t\t        \t\r\n\t\t\t\t        \t</ul>\r\n\r\n\t\t\t\t        \t<h3>PARTICIPATE ACTIVITIES - </h3>\r\n\t\t\t\t        \t<ul>\r\n\t\t\t\t        \t{formData.activity.map((act, index)=>(\r\n\t\t\t\t        \t\t<li className=\"p-0\"> {act.activityName}&nbsp;&nbsp;&nbsp; - &nbsp;&nbsp;&nbsp; {act.participateYear}\r\n\t\t\t\t        \t\t</li>\r\n\t\t\t\t        \t))}\r\n\t\t\t\t        \t</ul>\r\n\r\n\r\n\t\t\t\t        \t<h3>INTEREST / HOBBIES - </h3>\r\n\t\t\t\t        \t<ul>\r\n\t\t\t\t        \t{interestList.map((item, index)=>(\r\n\t\t\t\t        \t\t<li className=\"p-0\" key={index}> {item.trim()}\r\n\t\t\t\t\t        \t</li>\r\n\t\t\t\t        \t))}\t\t\t\t\t        \t\r\n\t\t\t\t        \t</ul>\r\n\r\n\t\t\t\t        \t<h3>PERSONAL DETAILS - </h3>\r\n\t\t\t\t        \t<table>\r\n\t\t\t\t        \t\t<tr>\r\n\t\t\t\t        \t\t\t<td><span>Father's name :</span></td>\r\n\t\t\t\t        \t\t\t<td>{formData.personalInfo.fatherName}</td>\r\n\t\t\t\t        \t\t</tr>\r\n\t\t\t\t        \t\t<tr>\r\n\t\t\t\t        \t\t\t<td><span>D.O.B. :</span></td>\r\n\t\t\t\t        \t\t\t<td>{formData.personalInfo.DOB}</td>\r\n\t\t\t\t        \t\t</tr>\r\n\t\t\t\t        \t\t<tr>\r\n\t\t\t\t        \t\t\t<td><span>Gender :</span></td>\r\n\t\t\t\t        \t\t\t<td>{formData.personalInfo.gender}</td>\r\n\t\t\t\t        \t\t</tr>\r\n\t\t\t\t        \t\t<tr>\r\n\t\t\t\t        \t\t\t<td><span>Marital Status :</span></td>\r\n\t\t\t\t        \t\t\t<td>{formData.personalInfo.maritalStatus}</td>\r\n\t\t\t\t        \t\t</tr>\r\n\t\t\t\t        \t\t<tr>\r\n\t\t\t\t        \t\t\t<td><span>Nationality :</span></td>\r\n\t\t\t\t        \t\t\t<td>{formData.personalInfo.nationality}</td>\r\n\t\t\t\t        \t\t</tr>\r\n\t\t\t\t        \t\t<tr>\r\n\t\t\t\t        \t\t\t<td><span>Religion :</span></td>\r\n\t\t\t\t        \t\t\t<td>{formData.personalInfo.religion}</td>\r\n\t\t\t\t        \t\t</tr>\r\n\t\t\t\t        \t\t<tr>\r\n\t\t\t\t        \t\t\t<td><span>Language :</span></td>\r\n\t\t\t\t        \t\t\t<td>{formData.personalInfo.language}</td>\r\n\t\t\t\t        \t\t</tr>\r\n\t\t\t\t        \t</table>\r\n\r\n\t\t\t\t        </div>\r\n\t\t\t\t      </div>\r\n\t\t\t\t      <div className=\"modal-footer model-hd-ft\">\r\n\t\t\t\t        <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n\t\t\t\t        <button type=\"button\" className=\"btn btn-primary\" onClick={handleSaveAsPDF}>Download Resume</button>\r\n\t\t\t\t      </div>\r\n\t\t\t\t    </div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</div>   \r\n\t\t\t{/*Model---------------------------------------------------------------------------*/}\r\n\t\t\t</>\r\n\t\t);\r\n}\r\n\r\nexport default Freshertemplate1;","import React from 'react';\r\n\r\nfunction StrToListModule(formData){\r\n\t\t\t// interest list---------------------------------------------------------------------\r\n\t\t\t const interestList = formData.interest.interest.split('/').filter((item) => item.trim() !== '');\r\n\r\n\t\t\t// skills list\r\n\t\t\tconst hardSkillsList = formData.skills.hardSkills.split('/').filter((item)=>item.trim() !=='');\r\n\t\t\tconst softSkillsList = formData.skills.softSkills.split('/').filter((item)=>item.trim() !=='');\r\n\r\n\t\t\t// experience description\r\n\t\t\tconst expDescriptionList = formData.experience\r\n\t\t\t\t  .flatMap((exp) =>\r\n\t\t\t\t    typeof exp.description === 'string'\r\n\t\t\t\t      ? exp.description.split('/').map((item) => item.trim())\r\n\t\t\t\t      : []\r\n\t\t\t\t  )\r\n\t\t\t\t  .filter((item) => item !== '');\r\n\treturn{\r\n\t\tinterestList,\r\n\t\thardSkillsList,\r\n\t\tsoftSkillsList,\r\n\t\texpDescriptionList\r\n\t};\r\n}\r\n\r\nexport default StrToListModule;"],"names":["_ref","formData","interestList","hardSkillsList","softSkillsList","expDescriptionList","StrToListModule","_jsx","_Fragment","children","className","id","tabIndex","role","_jsxs","type","personalInfo","fullName","contact","address","pinCode","city","state","country","phoneNo","email","profileSummary","higherEducation","map","edu","index","degree","passingYear","institution","GPA","internship","internTitle","internDuration","internCompany","experience","expp","jobTitle","duration","company","item","trim","project","prj","projectTitle","client","skillUsed","activity","act","activityName","participateYear","fatherName","DOB","gender","maritalStatus","nationality","religion","language","onClick","handleSaveAsPDF","input","document","getElementById","scale","window","devicePixelRatio","html2canvas","then","canvas","toDataURL","pdf","jsPDF","pdfWidth","internal","pageSize","getWidth","pdfHeight","getHeight","pageHeight","width","position","page","height","pageCanvas","createElement","pageContext","getContext","fillStyle","fillRect","drawImage","pageImgData","addPage","addImage","save","interest","split","filter","skills","hardSkills","softSkills","flatMap","exp","description"],"sourceRoot":""}